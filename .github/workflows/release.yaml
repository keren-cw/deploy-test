name: Release Promotion Workflow

on:
  release:
    types: [prereleased]

permissions:
  contents: write
  deployments: write

jobs:
  promote_release:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ github.event.release.html_url }}
    
    steps:
      - name: Get release info
        id: release_info
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const release = await github.rest.repos.getRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: context.payload.release.id
            });
            core.setOutput('tag_name', release.data.tag_name);
            core.setOutput('release_name', release.data.name);
            core.setOutput('body', release.data.body);

      - name: Promote to production release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Update the release to remove pre-release flag
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: context.payload.release.id,
              tag_name: process.env.TAG_NAME,
              name: process.env.RELEASE_NAME,
              body: process.env.BODY,
              prerelease: false,
              draft: false
            });
        env:
          TAG_NAME: ${{ steps.release_info.outputs.tag_name }}
          RELEASE_NAME: ${{ steps.release_info.outputs.release_name }}
          BODY: ${{ steps.release_info.outputs.body }}
